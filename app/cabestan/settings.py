"""
Django settings for cabestan project.

Generated by 'django-admin startproject' using Django 4.2.5.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path
import os
import logging
import matplotlib

# Turn off matplot debug
matplotlib.set_loglevel(level='warning')

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.environ['SECRET_KEY']

ALLOWED_HOSTS = os.environ['ALLOWED_HOSTS'].split() if 'ALLOWED_HOSTS' in os.environ else []
CSRF_TRUSTED_ORIGINS = [f"https://{i}" for i in ALLOWED_HOSTS]

CABESTAN_ENV_LIST = ["PROD", "DEV"]
CABESTAN_ENV = "PROD"

if 'CABESTAN_ENV' in os.environ:
    if os.environ['CABESTAN_ENV'] in CABESTAN_ENV_LIST:
        CABESTAN_ENV = os.environ['CABESTAN_ENV']
    else:
        print("Please choose CABESTAN_ENV in : {}".format(", ".join(CABESTAN_ENV_LIST)))
        exit(1)

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = (CABESTAN_ENV == 'DEV')

# Application definition

CABESTAN_APPS = ['scraper', 'process', 'display']

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'constance',
    'constance.backends.database',
] + [a + ".apps." + a.title() + "Config" for a in CABESTAN_APPS]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'cabestan.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': ['.'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'cabestan.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': os.environ['DB_NAME'],
        'USER': os.environ['DB_USER'],
        'PASSWORD': os.environ['DB_PASSWORD'],
        'HOST': 'cabestan_db',   # Or an IP Address that your DB is hosted on
        'PORT': '5432',
    }
}

CACHES = {
    "default": {
        "BACKEND": "django_redis.cache.RedisCache",
        "LOCATION": f"redis://cabestan_redis:6379",
        "OPTIONS": {
            "CLIENT_CLASS": "django_redis.client.DefaultClient"
        },
        "KEY_PREFIX": "config"
    }
}


CONSTANCE_BACKEND = 'constance.backends.database.DatabaseBackend'
CONSTANCE_DATABASE_CACHE_BACKEND = 'default'

# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'fr-fr'

TIME_ZONE = 'Europe/Paris'

USE_I18N = True

USE_TZ = True

logging.basicConfig(level=logging.DEBUG)

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'simple': {
            'format': '%(asctime)s - %(name)s (l%(lineno)d %(funcName)s) - %(levelname)s - %(message)s'
        },
    },
    'handlers': {
        'console': {
            'level': 'DEBUG',
            'class': 'logging.StreamHandler',
            'formatter': 'simple',
        },
        'file_scraper': {
            'level': 'DEBUG',
            'class': 'logging.FileHandler',
            'formatter': 'simple',
            'filename': './log/scraper.log',
        },
        'file_process': {
            'level': 'DEBUG',
            'class': 'logging.FileHandler',
            'formatter': 'simple',
            'filename': './log/process.log',
        },
        'file_display': {
            'level': 'DEBUG',
            'class': 'logging.FileHandler',
            'formatter': 'simple',
            'filename': './log/display.log',
        },
    },
    'loggers': {
        'asyncio': {
            'level': 'WARNING',
        },
        'aioredis': {
            'level': 'WARNING',
        },
        'git.cmd': {
            'level': 'WARNING',
        },
        'scraper': {
            'handlers': ['file_scraper'],
            'propagate': False,
        },
        'process': {
            'handlers': ['file_process'],
            'propagate': False,
        },
        'display': {
            'handlers': ['file_display'],
            'propagate': False,
        },
    }
}

CONSTANCE_CONFIG = {
    'API_SCRAPER_TOKEN': ('', "Token pour utiliser l'API du scraper", str),
    'API_PROCESS_TOKEN': ('', "Token pour utiliser l'API du processeur", str),
    'URL_RCR': ('https://www.idref.fr/services/listrcr', "URL de récupération des RCR", str),
    'URL_LANG': ('https://www.loc.gov/standards/iso639-2/ISO-639-2_utf-8.txt', "URL de récupération des languages", str),
    'URL_SUDOC': ("https://www.sudoc.abes.fr/cbs/sru/?operation=searchRetrieve&version=1.1&recordSchema=unimarc&query={query}", "URL de récupération œuvres Sudoc", str),
}

CONSTANCE_CONFIG_FIELDSETS = {
    'API': tuple(filter(lambda keyword: keyword.startswith('API_'), CONSTANCE_CONFIG.keys())),
    'URL': tuple(filter(lambda keyword: keyword.startswith('URL_'), CONSTANCE_CONFIG.keys())),
}

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_ROOT = os.path.join(BASE_DIR, 'static')
STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
MEDIA_URL = '/media/'
